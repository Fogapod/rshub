# Based on https://github.com/ClementTsang/bottom/blob/d6c69ea319ecf1b27100423124713e328343bfef/.github/workflows/deployment.yml
#   and on https://github.com/extrawurst/gitui/blob/23e52b7c87a19592ec179bf20d920eea0d08fa1c/.github/workflows/cd.yml

name: Release binaries

on:
  push:
    tags:
      - "[0-9]+.[0-9]+.[0-9]+"

env:
  PACKAGE_NAME: "rshub"

jobs:
  publish:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-musl
          - os: macos-latest
            target: x86_64-apple-darwin
          - os: windows-latest
            target: x86_64-pc-windows-msvc

    runs-on: ${{ matrix.os }}

    env:
      RUST_BACKTRACE: 1

    steps:
      - uses: actions/checkout@v2
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true
          target: ${{ matrix.target }}

      # this is required because of ring (rustls):
      # https://github.com/briansmith/ring/issues/563
      - name: Prepare musl
        if: matrix.target == 'x86_64-unknown-linux-musl'
        run: |
          sudo apt-get -qq install musl-tools --no-install-recommends

      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: cargo-${{ matrix.os }}-${{ matrix.target }}

      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --target=${{ matrix.target }}

      - name: Bundle windows
        if: matrix.os == 'windows-latest'
        run: |
          mkdir -p release
          7z a release/${{ env.PACKAGE_NAME }}-${{ matrix.target }}.zip target/${{ matrix.target }}/release/${{ env.PACKAGE_NAME }}.exe

      - name: Bundle non windows
        if: matrix.os != 'windows-latest'
        run: |
          mkdir -p release
          tar -C target/${{ matrix.target }}/release -czvf release/${{ env.PACKAGE_NAME }}-${{ matrix.target }}.tar.gz ${{ env.PACKAGE_NAME }}

      - name: Upload
        uses: softprops/action-gh-release@v1
        with:
          # prerelease until 1.0.0
          prerelease: true
          files: |
            release/*.tar.gz
            release/*.zip
